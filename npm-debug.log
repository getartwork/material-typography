0 info it worked if it ends with ok
1 verbose cli [ '/home/scarletj/.nvm/versions/node/v6.0.0/bin/node',
1 verbose cli   '/home/scarletj/.nvm/versions/node/v6.0.0/bin/npm',
1 verbose cli   'publish' ]
2 info using npm@3.8.6
3 info using node@v6.0.0
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/home/scarletj/Documents/material-typography',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /home/scarletj/.npm/material-typography/1.0.4/package.tgz not in flight; packing
9 verbose correctMkdir /home/scarletj/.npm correctMkdir not in flight; initializing
10 info lifecycle material-typography@1.0.4~prepublish: material-typography@1.0.4
11 silly lifecycle material-typography@1.0.4~prepublish: no script for prepublish, continuing
12 verbose tar pack [ '/home/scarletj/.npm/material-typography/1.0.4/package.tgz',
12 verbose tar pack   '/home/scarletj/Documents/material-typography' ]
13 verbose tarball /home/scarletj/.npm/material-typography/1.0.4/package.tgz
14 verbose folder /home/scarletj/Documents/material-typography
15 verbose addLocalTarball adding from inside cache /home/scarletj/.npm/material-typography/1.0.4/package.tgz
16 verbose correctMkdir /home/scarletj/.npm correctMkdir not in flight; initializing
17 silly cache afterAdd material-typography@1.0.4
18 verbose afterAdd /home/scarletj/.npm/material-typography/1.0.4/package/package.json not in flight; writing
19 verbose correctMkdir /home/scarletj/.npm correctMkdir not in flight; initializing
20 verbose afterAdd /home/scarletj/.npm/material-typography/1.0.4/package/package.json written
21 silly publish { name: 'material-typography',
21 silly publish   version: '1.0.4',
21 silly publish   repository:
21 silly publish    { type: 'git',
21 silly publish      url: 'git+https://github.com/juliancoleman/material-typography.git' },
21 silly publish   bugs: { url: 'https://github.com/juliancoleman/material-typography/issues' },
21 silly publish   homepage: 'https://github.com/juliancoleman/material-typography#readme',
21 silly publish   license: 'MIT',
21 silly publish   scripts:
21 silly publish    { suppath: 'mkdir -p build; cd build/ && mkdir -p less sass scss styl',
21 silly publish      'build:all': 'concurrently "npm run build:css"  "npm run build:sass" "npm run build:scss" "npm run build:styl" ',
21 silly publish      'build:css': 'cat css/**/*.css | cleancss -o css/typography.min.css',
21 silly publish      'build:less': 'lessc -x less/typography.less build/less/typography.min.css',
21 silly publish      'build:sass': 'node-sass --style compressed --no-cache sass/typography.sass build/sass/typography.min.css',
21 silly publish      'build:scss': 'node-sass --style compressed --no-cache scss/typography.scss build/scss/typography.min.css',
21 silly publish      'build:styl': 'stylus -c -r styl/typography.styl -o build/styl/typography.min.css',
21 silly publish      postinstall: 'npm run suppath && npm run build:all' },
21 silly publish   dependencies: { less: '~2.6.1', 'node-sass': '^3.5.3', stylus: '~0.54.2' },
21 silly publish   devDependencies:
21 silly publish    { 'clean-css': '^3.4.12',
21 silly publish      concurrently: '~2.0.0',
21 silly publish      'scss-lint': '~0.0.0' },
21 silly publish   readme: '# Material Typography\n\nTypography based on Google\'s Material Design Standard; available in CSS, LESS, SASS, SCSS, and Stylus.\n\n[![Build Status](https://travis-ci.org/juliancoleman/material-typography.svg?branch=master)](https://travis-ci.org/juliancoleman/material-typography)\n\n### Install Instructions\n\n#### NPM\n\n```\nnpm install --save material-typography\n```\n\n#### Bower\n\n```\nbower install material-typography\n```\n\nOr simply download the `.zip` and place it in your project folder wherever you\'d like, then include your flavor of `typography` in your primary stylesheet.\n\n# Typography\n\nSince the Ice Cream Sandwich release, Roboto has been the standard typeface on Android. Since Froyo, Noto has been the standard typeface on Android for all languages not covered by Roboto. Noto is also the standard typeface for all languages on Chrome OS.\n\n### Language Categorization\n\nLanguage scripts can be divided into three categories:\n\n__English and English-like__: Latin (except Vietnamese), Greek, and Cyrillic scripts, supported by both Roboto and Noto. Roboto has been extended to completely cover all Latin, Greek, and Cyrillic characters as defined in Unicode 7.0. The number of supported characters has doubled from previous releases, from about 2000 to about 4000 characters.\n\n__Tall__: Language scripts that require extra line height to accommodate larger glyphs, including South and Southeast Asian and Middle-Eastern languages, like Arabic, Hindi, Telugu, Thai, Vietnamese. Noto supports these languages with two weights.\n\n__Dense__: Language scripts that require extra line height to accommodate larger glyphs, including Chinese, Japanese, and Korean. Noto supports these languages with seven weights.\n\n## Typeface\n\n#### Roboto\n\nRoboto has been refined extensively to work across the wider set of supported platforms. It is slightly wider and rounder, giving it greater clarity and making it more optimistic.\n\n![Examples of Roboto](https://material-design.storage.googleapis.com/publish/material_v_4/material_ext_publish/0Bx4BSt6jniD7SW9CUzR4MnRpOTg/style_typography_roboto1.png)\n\n![Roboto A-Z and numerals](https://material-design.storage.googleapis.com/publish/material_v_4/material_ext_publish/0Bx4BSt6jniD7Y3JIMkV5ZmVaM2c/style_typography_roboto2.png)\n\n#### Roboto font weights\n\nRoboto has six weights: Thin, Light, Regular, Medium, Bold, and Black.\n\n![Roboto font weights](https://material-design.storage.googleapis.com/publish/material_v_4/material_ext_publish/0Bx4BSt6jniD7ZHlGSHpsMjU5YmM/style_typography_weights1.png)\n\n#### Noto\n\nNoto’s vertical metrics are compatible with Roboto.\n\n![Noto Sans examples for English and CJK (Chinese, Japanese, and Korean)](https://material-design.storage.googleapis.com/publish/material_v_4/material_ext_publish/0B_udO5B8pzrzcWkwSW11bkstZEU/style_typography_noto1.png)\n\n![Noto Sans examples for Thai and Hindi (Devangari)](https://material-design.storage.googleapis.com/publish/material_v_4/material_ext_publish/0B_udO5B8pzrzOEh3Z1BUNFdsVGc/style_typography_noto2.png)\n\n#### Noto font weights\n\nNoto Sans CJK (Chinese, Japanese, and Korean) has seven weights: Thin, Light, DemiLight, Regular, Medium, Bold, and Black. The weight of Noto Sans CJK Regular is the same as Roboto Regular.\n\n![Noto Sans CJK font weights](https://material-design.storage.googleapis.com/publish/material_v_4/material_ext_publish/0B_udO5B8pzrzdFA4NUh2TG1rT1E/style_typography_weight1.png)\n\nNoto fonts for Thai, Devanagari, and all other major living languages have Regular and Bold weights.\n\n![Noto Sans Thai and Hindi (Devangari) font weights](https://material-design.storage.googleapis.com/publish/material_v_4/material_ext_publish/0B_udO5B8pzrzdTRNVG0yX3JkUEE/style_typography_weight2.png)\n\n#### Hinted fonts\n\nHints are the instructions embedded in a font on how to modify (distort) a glyph to look better on low-resolution displays. As a tradeoff, a hinted font consumes more space than the unhinted version.\n\nBoth Roboto and Noto have hinted and unhinted versions. Google recommends:\n\n* Use the unhinted versions on Android and on Mac OS X, which doesn’t implement hints.\n* Use hinted fonts on Chrome OS, Windows, and Linux.\n\n#### Font stack\n\nFor both Android and web properties, the font stack should specify Roboto, Noto, and then sans-serif.\n\n## Styles\n\nToo many type sizes and styles at once can wreck any layout. A typographic scale has a limited set of type sizes that work well together along with the layout grid.\n\nThese sizes and styles were developed to balance content density and reading comfort under typical usage conditions. Type sizes are specified with sp (scaleable pixels) to enable large type modes for accessibility.\n\n#### English and English-like scripts\n\nLatin, Greek, and Cyrillic.\n\nThe basic set of styles are based on a typographic scale of 12, 14, 16, 20, and 34.\n\n![](https://material-design.storage.googleapis.com/publish/material_v_4/material_ext_publish/0Bzhp5Z4wHba3alhXZ2pPWGk3Zjg/style_typography_styles_scale.png)\n\n##### Across form factors, text that appears in the app bar should use the Title style, Medium 20sp\n\n![Examples using title style, English](https://material-design.storage.googleapis.com/publish/material_v_4/material_ext_publish/0B6Okdz75tqQsT3hTdEZ3c2JxaUk/style_typography_styles_05_title1.png)\n\nIn certain scenarios, use the larger subheading style instead of the smaller Body style. Some of those scenarios include when information is presented as small snippets or when titles are paired with lines of Body-styled text.\n\n![Examples using subheading style, English](https://material-design.storage.googleapis.com/publish/material_v_4/material_ext_publish/0B6Okdz75tqQsNVRVTk02WlFCZTg/style_typography_styles_07_subhead1.png)\n\nButton style (Medium 14sp, all caps) is used for all buttons. Button text should be all caps in languages that have capitalization. For languages that don’t have capitals, consider using color text for flat buttons to make them stand out from normal text.\n\n![Examples using Button style, English](https://material-design.storage.googleapis.com/publish/material_v_4/material_ext_publish/0B6Okdz75tqQsT3h3cUk3VEp6czQ/style_typography_styles_13_button1.png)\n\n![](https://material-design.storage.googleapis.com/publish/material_v_4/material_ext_publish/0B6Okdz75tqQsakpNYVp4YnV6b1U/style_typography_styles_14_button2.png)\n\n## Line Height\n\nTo achieve proper readability and appropriate pacing, line heights have been determined based on each style’s individual size and weight. Line wrapping only applies to Body, Subhead, Headline, and the smaller Display styles. All other styles should exist as single lines.\n\n#### English and English-like scripts\n\n![](https://material-design.storage.googleapis.com/publish/material_v_4/material_ext_publish/0Bzhp5Z4wHba3Q1VaNVBsdFozUTg/style_typography_styles_lineheight1.png)\n\n![](https://material-design.storage.googleapis.com/publish/material_v_4/material_ext_publish/0Bzhp5Z4wHba3S0hlSFBQRVE0QlU/style_typography_styles_lineheight2.png)\n\n![](https://material-design.storage.googleapis.com/publish/material_v_4/material_ext_publish/0B6Okdz75tqQsSDJtU2ZnVDZhTGM/style_typography_styles_lineheight3.png)\n\n## Other Typographic Guidelines\n\n### Colors & contrast\n\nA text color that is too similar to the background color is hard to read. Text with too much contrast can also be hard to read. This is especially true of light-colored text against dark backgrounds.\n\nText should maintain a minimum contrast ratio of at least 4.5:1 (calculated based on luminance values) for legibility. A ratio of 7:1 is preferred.\n\nThese color combinations also consider contrast ratios for users who perceive color differently.\n\n![](https://material-design.storage.googleapis.com/publish/material_v_4/material_ext_publish/0Bzhp5Z4wHba3dGx2T1FqM0xXbTA/style_typography_styles_contrast.png)\n\n![Contrast over light background](https://material-design.storage.googleapis.com/publish/material_v_4/material_ext_publish/0Bzhp5Z4wHba3OUFUOUl4MUtTaE0/style_typography_styles_15_contrast1.png)\n\n![Contrast over dark background](https://material-design.storage.googleapis.com/publish/material_v_4/material_ext_publish/0Bzhp5Z4wHba3S250RlVKaXAwZTA/style_typography_styles_16_contrast2.png)\n\n![Contrast over image](https://material-design.storage.googleapis.com/publish/material_v_4/material_ext_publish/0Bzhp5Z4wHba3cS1XWnFVUGNZMnM/style_typography_styles_17_contrast3.png)\n\n![Contrast over illustration](https://material-design.storage.googleapis.com/publish/material_v_4/material_ext_publish/0Bzhp5Z4wHba3clVzR3g1SWkzaGc/style_typography_styles_18_contrast4.png)\n\n#### Large and dynamic type\n\nFor the best user experience, use dynamic type instead of relying only on smaller type sizes or allowing truncation of larger-size text.\n\nLarge type applied correctly can make apps more interesting, differentiate layouts, and help users to decode content quickly.\n\nDynamic type enables large type when the length of the text in a layout is unknown. Dynamic sizes are selected from a typographic scale based on available space and letter size estimates.\n\n![Dynamic type](https://material-design.storage.googleapis.com/publish/material_v_4/material_ext_publish/0Bx4BSt6jniD7OERKNk91VEZMakE/style_typography_styles_19_dynamic1.png)\n\n![](https://material-design.storage.googleapis.com/publish/material_v_4/material_ext_publish/0Bx4BSt6jniD7NFJ1UjFwVnNtY3M/style_typography_styles_20_dynamic2.png)\n\n#### Line breaking\n\nThe images show best practices for line breaks.\n\n![](https://material-design.storage.googleapis.com/publish/material_v_4/material_ext_publish/0B6Okdz75tqQsMTd0MVdkZWwyUDg/style_typography_styles_linebreaks1.png)\n\nDo.\n\n![](https://material-design.storage.googleapis.com/publish/material_v_4/material_ext_publish/0B6Okdz75tqQsZXhBR3RaME9xLVU/style_typography_styles_linebreaks2.png)\n\nDon\'t.\n\nAvoid leaving large gaps and orphans on a line. Try not to leave very short words such as prepositions at the end of a line. Well-considered line breaks can avoid hyphenation of words altogether.\n\n#### Tracking & kerning\n\n![](https://material-design.storage.googleapis.com/publish/material_v_4/material_ext_publish/0Bzhp5Z4wHba3LUZGWGdtZmFfUU0/style_typography_styles_tracking.png)\n\n##### Line length\n\nConsider this advice on readability and line length from the Baymard Institute:\n\n“You should have around 60 characters per line if you want a good reading experience. Having the right amount of characters on each line is key to the readability of your text.”\n\n"Too wide – if a line of text is too long, the user’s eye will have a hard time focusing on the text. This is because the length makes it difficult to get an idea of where the line starts and ends. Furthermore it can be difficult to continue from the correct line in large blocks of text.”\n\n"Too narrow – if a line is too short, the eye will have to travel back too often, breaking the reader’s rhythm. Too short lines also tend to stress people, making them begin on the next line before finishing the current one (hence skipping potentially important words).”\n\nSource: “Readability: the Optimal Line Length,”\n\n[http://baymard.com/blog/line-length-readability](http://baymard.com/blog/line-length-readability)\n\n![Ideal line lengths for English body text](https://material-design.storage.googleapis.com/publish/material_v_4/material_ext_publish/0B6Okdz75tqQsVDdtU1NfU3Jtdlk/style_typography_styles_linelengths1.png)\n\n![Ideal line lengths for short likes of text in English](https://material-design.storage.googleapis.com/publish/material_v_4/material_ext_publish/0B6Okdz75tqQsMzYxcGowWTE5NW8/style_typography_styles_linelengths2.png)\n',
21 silly publish   readmeFilename: 'README.md',
21 silly publish   gitHead: 'edf1c77748a81d1930a925f40bc1aa421ce0bd19',
21 silly publish   description: 'Typography based on Google\'s Material Design Standard; available in CSS, LESS, SASS, SCSS, and Stylus.',
21 silly publish   _id: 'material-typography@1.0.4',
21 silly publish   _shasum: '52e516a5629118ccae1d38ee5a46c34dbf53545d',
21 silly publish   _from: '.' }
22 verbose getPublishConfig undefined
23 silly mapToRegistry name material-typography
24 silly mapToRegistry using default registry
25 silly mapToRegistry registry https://registry.npmjs.org/
26 silly mapToRegistry data Result {
26 silly mapToRegistry   raw: 'material-typography',
26 silly mapToRegistry   scope: null,
26 silly mapToRegistry   name: 'material-typography',
26 silly mapToRegistry   rawSpec: '',
26 silly mapToRegistry   spec: 'latest',
26 silly mapToRegistry   type: 'tag' }
27 silly mapToRegistry uri https://registry.npmjs.org/material-typography
28 verbose publish registryBase https://registry.npmjs.org/
29 silly publish uploading /home/scarletj/.npm/material-typography/1.0.4/package.tgz
30 verbose request uri https://registry.npmjs.org/material-typography
31 verbose request sending authorization for write operation
32 info attempt registry request try #1 at 11:48:22 AM
33 verbose request using bearer token for auth
34 verbose request id f39b5557c6cf8934
35 http request PUT https://registry.npmjs.org/material-typography
36 http 403 https://registry.npmjs.org/material-typography
37 verbose headers { 'content-type': 'application/json',
37 verbose headers   'cache-control': 'max-age=300',
37 verbose headers   'content-length': '95',
37 verbose headers   'accept-ranges': 'bytes',
37 verbose headers   date: 'Sat, 30 Apr 2016 18:48:22 GMT',
37 verbose headers   via: '1.1 varnish',
37 verbose headers   connection: 'keep-alive',
37 verbose headers   'x-served-by': 'cache-lax1430-LAX',
37 verbose headers   'x-cache': 'MISS',
37 verbose headers   'x-cache-hits': '0',
37 verbose headers   'x-timer': 'S1462042102.254422,VS0,VE195',
37 verbose headers   vary: 'Accept-Encoding' }
38 verbose request invalidating /home/scarletj/.npm/registry.npmjs.org/material-typography on PUT
39 error publish Failed PUT 403
40 verbose stack Error: "You cannot publish over the previously published version 1.0.4." : material-typography
40 verbose stack     at makeError (/home/scarletj/.nvm/versions/node/v6.0.0/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:264:12)
40 verbose stack     at CachingRegistryClient.<anonymous> (/home/scarletj/.nvm/versions/node/v6.0.0/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:252:14)
40 verbose stack     at Request._callback (/home/scarletj/.nvm/versions/node/v6.0.0/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:172:14)
40 verbose stack     at Request.self.callback (/home/scarletj/.nvm/versions/node/v6.0.0/lib/node_modules/npm/node_modules/request/request.js:199:22)
40 verbose stack     at emitTwo (events.js:106:13)
40 verbose stack     at Request.emit (events.js:191:7)
40 verbose stack     at Request.<anonymous> (/home/scarletj/.nvm/versions/node/v6.0.0/lib/node_modules/npm/node_modules/request/request.js:1036:10)
40 verbose stack     at emitOne (events.js:101:20)
40 verbose stack     at Request.emit (events.js:188:7)
40 verbose stack     at IncomingMessage.<anonymous> (/home/scarletj/.nvm/versions/node/v6.0.0/lib/node_modules/npm/node_modules/request/request.js:963:12)
41 verbose statusCode 403
42 verbose pkgid material-typography
43 verbose cwd /home/scarletj/Documents/material-typography
44 error Linux 3.19.0-58-generic
45 error argv "/home/scarletj/.nvm/versions/node/v6.0.0/bin/node" "/home/scarletj/.nvm/versions/node/v6.0.0/bin/npm" "publish"
46 error node v6.0.0
47 error npm  v3.8.6
48 error code E403
49 error "You cannot publish over the previously published version 1.0.4." : material-typography
50 error If you need help, you may report this error at:
50 error     <https://github.com/npm/npm/issues>
51 verbose exit [ 1, true ]
